name: Build & Push Blockscout Core image

on:
  push:
    branches: [ main ]
    tags:     [ 'v*' ]          # build on version tags too
  workflow_dispatch:            # manual run button

env:
  # ───────────── customise these few lines ─────────────
  IMAGE_NAME: tiljordan/blockscout          # ghcr.io/<OWNER>/<NAME> or Docker Hub
  RELEASE_VERSION: ${{ github.ref_name }}   # on a tag run this is the tag name
  # optional Blockscout feature flags (true/false, string, etc.)
  DISABLE_WEBAPP: "true"
  ADMIN_PANEL_ENABLED: "false"
  # ──────────────────────────────────────────────────────

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write    # required for ghcr.io
    steps:
      # 1) check out your fork
      - uses: actions/checkout@v4

      # 2) set up QEMU so we can emulate amd64 on the arm64 runner (and vice-versa)
      - uses: docker/setup-qemu-action@v3

      # 3) enable Docker Buildx
      - uses: docker/setup-buildx-action@v3

      # 4) log in to your registry
      #    ─────────────────────────
      #    Option A – Docker Hub  (set DOCKERHUB_USERNAME / DOCKERHUB_TOKEN secrets)
      - name: Login to Docker Hub
        if: env.IMAGE_NAME != 'ghcr.io/${{ github.repository }}'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5) build & push the multi-arch image
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to:   type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            DISABLE_WEBAPP=${{ env.DISABLE_WEBAPP }}
            ADMIN_PANEL_ENABLED=${{ env.ADMIN_PANEL_ENABLED }}
            BLOCKSCOUT_VERSION=${{ env.RELEASE_VERSION }}
            RELEASE_VERSION=${{ env.RELEASE_VERSION }}